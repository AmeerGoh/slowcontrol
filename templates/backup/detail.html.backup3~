<DOCTYPE html>
<html>
  <head>
    <title>{{ pageTitle }}</title> {{! If you are wondering about the tags consisting of double braces, see http://mustache.github.com/mustache.5.html}}
    <link rel="stylesheet" href="/slowcontrol/_design/slowcontrol/style/main.css" type="text/css">
  </head>
  <body>
    <div id="account"></div>
    <h1>{{pageTitle}}</h1>
    <div id="testtext0"></div>
    <div id="testtext1"></div>
    <div id="testtext2"></div>
    <div id="testtext3"></div>
    <button id="getPresentThresholds">Get Present Thresholds</button>
    <button id="getApprovedThresholds">Last Approved Thresholds</button>
    <button id="saveThresholds">Save Thresholds</button>
    <div class="header">
      <div class="wideColumn">
        <div class="wide">Channel Name
        {{#ioss}}
          {{#cards}}
            {{#channels}}
              <div class="wide" id="name_ios{{ios}}card{{card}}channel{{channel}}"></div>
            {{/channels}}
          {{/cards}}
        {{/ioss}}
        </div>
      </div>

      <div class="narrowColumn">
        <div class="narrow">LoLo</div>
        {{#ioss}}
          {{#cards}}
            {{#channels}}
              <input class="narrow" id="lolo_ios{{ios}}card{{card}}channel{{channel}}" />
            {{/channels}}
          {{/cards}}
        {{/ioss}}
      </div>

      <div class="narrowColumn">
        <div class="narrow">Lo</div>
        {{#ioss}}
          {{#cards}}
            {{#channels}}
              <input class="narrow" id="lo_ios{{ios}}card{{card}}channel{{channel}}" />
            {{/channels}}
          {{/cards}}
        {{/ioss}}
      </div>

      <div class="narrowColumn">
        <div class="narrow">Presently</div>
        {{#ioss}}
          {{#cards}}
            {{#channels}}
              <div class="narrow"></div>
            {{/channels}}
          {{/cards}}
        {{/ioss}}
      </div>

      <div class="narrowColumn">
        <div class="narrow">Hi</div>
        {{#ioss}}
          {{#cards}}
            {{#channels}}
              <input class="narrow" id="hi_ios{{ios}}card{{card}}channel{{channel}}" />
            {{/channels}}
          {{/cards}}
        {{/ioss}}
      </div>

      <div class="narrowColumn">
        <div class="narrow">HiHi</div>
        {{#ioss}}
          {{#cards}}
            {{#channels}}
              <input class="narrow" id="hihi_ios{{ios}}card{{card}}channel{{channel}}" />
            {{/channels}}
          {{/cards}}
        {{/ioss}}
      </div>

      <div class="narrowColumn">
        <div class="narrow">Enabled</div>
        {{#ioss}}
          {{#cards}}
            {{#channels}}
              <div class="narrow"><input type="checkbox" id="isEnabled_ios{{ios}}card{{card}}channel{{channel}}" /></div>
            {{/channels}}
          {{/cards}}
        {{/ioss}}
      </div>
    </div>
  </body>
  <script src="/_utils/script/json2.js"></script>
  <script src="/_utils/script/jquery.js"></script>
  <script src="/_utils/script/jquery.couch.js"></script>
  <script src="/_utils/script/sha1.js"></script>
  <script src="../../vendor/couchapp/jquery.couch.app.js"></script>
  <script src="../../vendor/couchapp/jquery.couch.app.util.js"></script>
  <script src="../../vendor/couchapp/jquery.evently.js"></script>
  <script src="../../vendor/couchapp/jquery.mustache.js"></script>
  <script src="../../script/app.js"></script>
  <script type="text/javascript" charset="utf-8">
    $.couch.app(function(app) {
      var thresholdData=[];
      var path="http://172.25.100.70:5984";
      var channeldb="/slowcontrol/_design/slowcontrol"
      var sizes={{{sizes}}};
      $("#getPresentThresholds").click(function(){
        $.getJSON(path+channeldb+"/_view/recent1?descending=true",function(result1){
          thresholdData[0]=result1.rows[0];
          $.getJSON(path+channeldb+"/_view/recent2?descending=true",function(result2){ 
            thresholdData[1]=result2.rows[0];
            $.getJSON(path+channeldb+"/_view/recent3?descending=true",function(result3){ 
              thresholdData[2]=result3.rows[0];
              for (var ios=0; ios<sizes.ioss.length; ios++){
                for (var card=0; card<sizes.ioss[ios].cards.length; card++){
                  for (var channel=0; 
                  channel<sizes.ioss[ios].cards[card].channels; 
                  channel++){
                    $("#name_ios"+ios+"card"+card+"channel"+channel).text("" + 
                      thresholdData[ios].value.cards[card]
                      .channels[channel].id + " " + 
                      thresholdData[ios].value.cards[card]
                      .channels[channel].signal + " " + 
                      thresholdData[ios].value.cards[card]
                      .channels[channel].type);
                    if (thresholdData[ios].value.cards[card]
                    .channels[channel].lolo){
                      $("#lolo_ios"+ios+"card"+card+"channel"+channel).val(
                      thresholdData[ios].value.cards[card]
                      .channels[channel].lolo);
                      $("#lo_ios"+ios+"card"+card+"channel"+channel).val(
                      thresholdData[ios].value.cards[card]
                      .channels[channel].lo);
                      $("#hi_ios"+ios+"card"+card+"channel"+channel).val(
                      thresholdData[ios].value.cards[card]
                      .channels[channel].hi);
                      $("#hihi_ios"+ios+"card"+card+"channel"+channel).val(
                      thresholdData[ios].value.cards[card]
                      .channels[channel].hihi);
                    }
                    else {
                      $("#lolo_ios"+ios+"card"+card+"channel"+channel).attr(
                      "disabled",true);
                      $("#lo_ios"+ios+"card"+card+"channel"+channel).attr(
                      "disabled",true);
                      $("#hi_ios"+ios+"card"+card+"channel"+channel).attr(
                      "disabled",true);
                      $("#hihi_ios"+ios+"card"+card+"channel"+channel).attr(
                      "disabled",true);
                    }
                    if (thresholdData[ios].value.cards[card]
                    .channels[channel].isEnabled!=null){ //if proprety exists
                      $("#isEnabled_ios"+ios+"card"+card+"channel"+channel)
                      .attr("checked", thresholdData[ios].value.cards[card]
                      .channels[channel].isEnabled);
                      if (thresholdData[ios].value.cards[card]
                      .channels[channel].isEnabled==false){ //if disabled
                        $("#name_ios"+ios+"card"+card+"channel"+channel)
                        .css({"color":"CCCC00"});
                      }
                    }
                    else {
                      $("#isEnabled_ios"+ios+"card"+card+"channel"+channel)
                      .attr("disabled", true);
                    }
                  }
                }
              }
            });
          });
        });
      });
      $("#getApprovedThresholds").click(function(){
        $.getJSON(path+channeldb+"/_view/recent_approved1?descending=true",function(result1){
          thresholdData[0]=result1.rows[0];
          $.getJSON(path+channeldb+"/_view/recent_approved2?descending=true",function(result2){ 
            thresholdData[1]=result2.rows[0];
            $.getJSON(path+channeldb+"/_view/recent_approved3?descending=true",function(result3){ 
              thresholdData[2]=result3.rows[0];
              for (var ios=0; ios<sizes.ioss.length; ios++){
                for (var card=0; card<sizes.ioss[ios].cards.length; card++){
                  for (var channel=0; 
                  channel<sizes.ioss[ios].cards[card].channels; 
                  channel++){
                    $("#lolo_ios"+ios+"card"+card+"channel"+channel).val(
                    thresholdData[ios].value.cards[card]
                    .channels[channel].lolo);
                    $("#lo_ios"+ios+"card"+card+"channel"+channel).val(
                    thresholdData[ios].value.cards[card]
                    .channels[channel].lo);
                    $("#hi_ios"+ios+"card"+card+"channel"+channel).val(
                    thresholdData[ios].value.cards[card]
                    .channels[channel].hi);
                    $("#hihi_ios"+ios+"card"+card+"channel"+channel).val(
                    thresholdData[ios].value.cards[card]
                    .channels[channel].hihi);
                    $("#isEnabled_ios"+ios+"card"+card+"channel"+channel)
                    .attr("checked", thresholdData[ios].value.cards[card]
                    .channels[channel].isEnabled);
                  }
                }
              }
            });
          });
        });
      });

      $("#saveThresholds").click(function(){
        for (var ios=0; ios<sizes.ioss.length; ios++){
          for (var card=0; card<sizes.ioss[ios].cards.length; card++){
            for (var channel=0; channel<sizes.ioss[ios].cards[card].channels; 
            channel++){
              if (thresholdData[ios].value.cards[card].channels[channel].lolo){
                thresholdData[ios].value.cards[card].channels[channel].lolo=
                $("#lolo_ios"+ios+"card"+card+"channel"+channel).val();
                thresholdData[ios].value.cards[card].channels[channel].lo=
                $("#lo_ios"+ios+"card"+card+"channel"+channel).val();
                thresholdData[ios].value.cards[card].channels[channel].hi=
                $("#hi_ios"+ios+"card"+card+"channel"+channel).val();
                thresholdData[ios].value.cards[card].channels[channel].hihi=
                $("#hihi_ios"+ios+"card"+card+"channel"+channel).val();
              }
              if (thresholdData[ios].value.cards[card]
              .channels[channel].isEnabled!=null){ //if property exists
                thresholdData[ios].value.cards[card]
                .channels[channel].isEnabled=
                $("#isEnabled_ios"+ios+"card"+card+"channel"+channel)
                .attr("checked");
                if (thresholdData[ios].value.cards[card]
                .channels[channel].isEnabled==true){ //if enabled
                  $("#name_ios"+ios+"card"+card+"channel"+channel).css({"color":null});
                }
                else {
                  $("#name_ios"+ios+"card"+card+"channel"+channel).css({"color":"CCCC00"});
                }
              }
            }
          }

          thresholdData[ios].value.timestamp=Math.round(Date.now()/1000);
          thresholdData[ios].value.approved=0;
        }
        $.getJSON(path+"/_uuids?count="+sizes.ioss.length, function(result){
          for (var ios=0; ios<sizes.ioss.length; ios++){
            thresholdData[ios].value._id=result.uuids[ios]; 
            delete thresholdData[ios].value._rev;
            app.db.saveDoc(thresholdData[ios].value, {
              success : function(resp) {
                $("#testtext"+ios).text("saved ios "+ios);
              }
            });
          }
        });
      });
    });
  </script> 
</html>
